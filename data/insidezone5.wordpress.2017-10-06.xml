<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.8" created="2017-10-06 17:08" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Inside Zone 5</title>
	<link>http://dev01.local</link>
	<description>Internal Information &#38; Documentation</description>
	<pubDate>Fri, 06 Oct 2017 17:08:30 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://dev01.local</wp:base_site_url>
	<wp:base_blog_url>http://dev01.local</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[jeff]]></wp:author_login><wp:author_email><![CDATA[jeff.cicero@zone5.com]]></wp:author_email><wp:author_display_name><![CDATA[jeff]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.8</generator>

	<item>
		<title>Conditional CSS for IE</title>
		<link>http://dev01.local/2008/09/css-ie/</link>
		<pubDate>Thu, 11 Sep 2008 00:48:07 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[In lieu of using "hacks" within your CSS files which automatically make your CSS fail validation, you can specify conditional statements to apply to particular CSS selectors and properties to override what you have set in your stylesheet. Some of you may already know these, but I'll do a quick overview because I think it's a good idea to make this a coding standard for Z5.

They are written like this:

<span style="font-family: courier new,courier;">&lt;!--[if IE 6]&gt;
&lt;style type="text/css"&gt;
contentContainer {</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2008-09-10 19:48:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-09-11 00:48:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[css-ie]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make Your Website Run PHP5</title>
		<link>http://dev01.local/2008/09/make-your-website-run-php5/</link>
		<pubDate>Wed, 17 Sep 2008 18:29:50 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>At the time of this writing, the web servers still run PHP4 by default.</p><p>&nbsp;</p><p><a href="http://www.gophp5.org/faq" target="_blank">GoPHP5.org</a> </p><p>&nbsp;</p><p>To make your website run PHP5, add this line to your .htaccess file:</p><p><font face="courier new,courier">AddHandler application/x-httpd-php5 .php</font> </p><br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2008-09-17 13:29:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-09-17 18:29:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[make-your-website-run-php5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Balance HTML Tags</title>
		<link>http://dev01.local/2008/09/balance-html-tags/</link>
		<pubDate>Thu, 25 Sep 2008 23:20:40 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>We found that when Drupal generated teasers, it did not bother to clean up the HTML tags and left them open. Obviously not cool. Here's a very basic function to make sure all your tags are closed. You can use it in Drupal, Wordpress, whatever. You just call</p><p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date><![CDATA[2008-09-25 18:20:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-09-25 23:20:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[balance-html-tags]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Call A Block Manually</title>
		<link>http://dev01.local/2008/09/call-a-block-manually/</link>
		<pubDate>Tue, 30 Sep 2008 01:50:00 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>Say you want to put a Drupal block somewhere and you can't do it with content regions. Like, in the middle of your content, say. Do this:</p><p>&nbsp;</p><p><span style="color: #000000"><span style="color: #0000bb">$block </span><span style="color: #007700">= </span><span style="color: #0000bb">module_invoke</span><span style="color: #007700">(</span><span style="color: #dd0000">'block'</span><span style="color: #007700">, </span><span style="color: #dd0000">'block'</span><span style="color: #007700">, </span><span style="color: #dd0000">'view'</span><span style="color: #007700">, </span><span style="color: #0000bb">1</span><span style="color: #007700">);<br />print </span><span style="color: #0000bb">$block</span><span style="color: #007700">[</span><span style="color: #dd0000">'content'</span><span style="color: #007700">];</span></span> </p><p>&nbsp;</p><p>The 1 is the block number.</p><p>From <a href="http://drupal.org/node/26502">here</a>. </p><br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date><![CDATA[2008-09-29 20:50:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-09-30 01:50:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[call-a-block-manually]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Get The Path To An Attached Image</title>
		<link>http://dev01.local/2008/10/get-the-path-to-an-attached-image/</link>
		<pubDate>Wed, 01 Oct 2008 22:55:01 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[When you attach an image to a node in Drupal, it becomes a node of it's own. If you wanted to path to that image, you would have to dig through three tables to find it. Here's a handy function to do that for you.<br /><br /><!--more--><br /><br />You pass it the node id of the node the image is attached to, and the size you want. It returns a string file path that you can use in your HTML IMG tag.<br /><br /><pre lang="php">function lookupImagePath($nid, $size = '_original') {

	$sql  = 'SELECT f.filepath ';
	$sql .= 'FROM image_attach a, image i, files f ';
	$sql .= 'WHERE a.iid = i.nid ';
	$sql .= 'AND i.fid = f.fid ';
	$sql .= 'AND a.nid = ' . $nid . ' ';
	$sql .= 'AND i.image_size = "' . $size . '" ';

	$res = db_query($sql);
	$filepath = db_result($res);
	$filepath = htmlentities($filepath);

	return $filepath;

} // end lookupImagePath
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date><![CDATA[2008-10-01 17:55:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-01 22:55:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[get-the-path-to-an-attached-image]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How To Define Your Own Image Gallery Templates</title>
		<link>http://dev01.local/2008/10/how-to-define-your-own-image-gallery-templates/</link>
		<pubDate>Wed, 01 Oct 2008 23:04:55 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[If you're using Drupal "image" module, with the "image gallery" contributed module, you may want to change the HTML it produces. Here's how.<br /><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date><![CDATA[2008-10-01 18:04:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-01 23:04:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[how-to-define-your-own-image-gallery-templates]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Allow Drupal Templates By Node ID</title>
		<link>http://dev01.local/2008/10/allow-drupal-templates-by-node-id/</link>
		<pubDate>Wed, 01 Oct 2008 23:11:11 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>By default, Drupal will let you define a template called node-bork.tpl.php, which is a template for all nodes of type "bork." That's pretty handy, but what if you want a template for a specific node id? What I want to be able to do is define a template called node-4.tpl.php, which would be the template for the node with node id 4. Here's how.</p><p>&nbsp;</p><br /><!--more--><br /><p>In /includes/theme.inc there is a function template_preprocess_node. At the bottom is this line:</p><p><font face="courier new,courier">$variables['template_files'][] = 'node-'. $node-&gt;type;</font></p><p>Just add this line: </p><p><font face="courier new,courier">$variables['template_files'][] = 'node-'. $node-&gt;nid;</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date><![CDATA[2008-10-01 18:11:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-01 23:11:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[allow-drupal-templates-by-node-id]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drupal - Initial Setup</title>
		<link>http://dev01.local/2008/10/drupal-initial-setup/</link>
		<pubDate>Thu, 02 Oct 2008 22:50:07 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Since Drupal is up to version 6.4 at this point and this can change at any point, your best bet is to get the most recent version from Drupal.org.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date><![CDATA[2008-10-02 17:50:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-02 22:50:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[drupal-initial-setup]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Coding Standards w/Classes, PHP5</title>
		<link>http://dev01.local/2008/10/coding-standards-wclasses-php5/</link>
		<pubDate>Fri, 03 Oct 2008 19:25:38 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Using classes in PHP makes for a much more secure and reusable codebase. The below is an example of a MySQL connection class extended by a class that retrieves data from a MySQL database, sets its member variables to the resulting values, and returns it when necessary.

<strong>Note:</strong> This will only work in PHP5, any version lower than PHP 5.0 will throw fatal errors.

<strong>Also note:</strong> This is still a work in progress, as time constraints limit how much time I can spend on this per day, I will be adding more articles and/or expanding upon existing ones.

<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2008-10-03 14:25:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-03 19:25:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[coding-standards-wclasses-php5]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Custom Date Formats Handles &quot;S&quot; Poorly</title>
		<link>http://dev01.local/2008/10/custom-date-formats-handles-s-poorly/</link>
		<pubDate>Fri, 03 Oct 2008 22:30:56 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>We're using the Date module for the Zone 5 site, and we set up a custom field for events, called Start Date. We told it to display using the custom format</p><p>F jS, Y</p><p>And we were expecting October 3rd, 2008, but we got October 3, 2008 rd. Weird, right?</p><br /><!--more--><br /><p>After much digging I found out that because S (which gives you the st, nd, rd, th bit) is not defined as a year, month, day, hour, minute, second, or timezone field, Drupal seems to think it's a timezone field.</p><p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date><![CDATA[2008-10-03 17:30:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-03 22:30:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[custom-date-formats-handles-s-poorly]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Putting A File Up For A Client (FTP/HTTP)</title>
		<link>http://dev01.local/2008/10/putting-a-file-up-for-a-client-ftphttp/</link>
		<pubDate>Mon, 06 Oct 2008 23:02:42 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Through Finder, AppleK and pick afp://zone5.com<br /> Pick your username/directory (for example, egeorgi)<br /> Go to the Sites directory<br /> Dump your files here<br /> Clients will be able to access them as http://www.zone5.com/~egeorgi/project/your_file.zip<br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date><![CDATA[2008-10-06 18:02:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-06 23:02:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[putting-a-file-up-for-a-client-ftphttp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="client-access"><![CDATA[Client Access]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rotating Background Images</title>
		<link>http://dev01.local/2008/10/rotating-background-images/</link>
		<pubDate>Thu, 16 Oct 2008 22:03:31 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Here's a script you can use to rotate images in a directory.

<!--more-->

To use it, just do something like

background: url(/path/to/script/rotator.php) top left no-repeat;

I believe the script expects the images to be in the same directory as itself, but you can change that.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2008/10/rotatorphp.txt">rotator.php</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date><![CDATA[2008-10-16 17:03:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-10-16 22:03:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rotating-background-images]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Geocodes with PHP</title>
		<link>http://dev01.local/2008/11/getting-geocodes-with-php/</link>
		<pubDate>Tue, 11 Nov 2008 23:36:41 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[The Google Maps API has a "geocoder," which is javascript, and which lets you get the geocodes for an address "on the fly." Unfortunately, since this is time and resource intensive, if you have 60-something points you want to put on a map, the results are flaky at best. So you probably want to store the geocodes in the table with the address, right? You need a way to take the address from a form and get an address when the form is posted.

<!--more-->

What you want to do is something like
<pre lang="php">$geocode = getGeocode("25 Monroe St Albany NY");</pre>
Attached are two files to help you do that. In "functions" you'll find the getGeocode() function. You will need to change the URL being used. The other file is "getGeocode", which actually goes out and gets the geocode. The only thing you have to change in this file is your Google Maps API key.

Be careful about what you get back. You would expect x,y, but Google likes to return y,x,z. You may have to do some manipulation.

For more info: <a href="http://ethancodes.com/2008/10/get-geocodes-from-addresses/">read this</a>.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2008/11/functionsphp.txt">functions.php</a>

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2008/11/getgeocodephp.txt">getgeocode.php</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date><![CDATA[2008-11-11 18:36:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-11-11 23:36:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[getting-geocodes-with-php]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery Expand/Collapse Menus</title>
		<link>http://dev01.local/2008/11/jquery-expandcollapse-menus/</link>
		<pubDate>Mon, 17 Nov 2008 21:37:26 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[I wrote this code for Wordpress's sidebar widgets, but it can be adapted to anything.
<br /><!--more--><br />
<pre lang="javascript">
function sidebarHide(element) {
	// this function hides the ul
	// also calls sidebarPlus
	$('#sidebar ul ' + element +' ul').each(function() {
		$(this).hide('fast');
	});
	sidebarPlus(element);
	return false;
}
function sidebarShow(element) {
	// this function shows the ul
	// also calls sidebarMinus
	$('#sidebar ul ' + element +' ul').each(function() {
		$(this).show('fast');
	});
	sidebarMinus(element);
	return false;
}
function sidebarPlus(element) {
	// function appends a + to the title
	// this plus is a link to show the contents
	$('#sidebar ul ' + element + ' h2').each(function() {
		var text = $(this).text();
		var plus = text.lastIndexOf(" -");
		if (plus > 0) {
			text = text.substring(0, plus);
		}
		var link = '[a href="#" onclick="return sidebarShow('' + element + '');"] +[/a]';
		$(this).html( text + ' ' + link);
	});	
}
function sidebarMinus(element) {
	// function appends a - to the title
	// this minus is a link to hide the contents
	$('#sidebar ul ' + element + ' h2').each(function() {
		var text = $(this).text();
		var minus = text.lastIndexOf(" +");
		if (minus) {
			text = text.substring(0, minus);
		}
		var link = '[a href="#" onclick="return sidebarHide('' + element + '');"] -[/a]';
		$(this).html( text + ' ' + link);
	});	
}
</pre>

And to use it

<pre lang="javascript">
$(document).ready(function() {
	sidebarHide('#recent-posts');
	sidebarHide('#linkcat-2');
	sidebarHide('#linkcat-3');
});
</pre>

Or, to just handle everything in the sidebar...

<pre lang="javascript">
$(document).ready(function() {
	$('#sidebar ul li').each(function() {
		var n = $(this).attr('id');
		if (n != '') {
			sidebarHide('#' + n);
		}
	});
});
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date><![CDATA[2008-11-17 16:37:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-11-17 21:37:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery-expandcollapse-menus]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Handling Empty Google Search Results</title>
		<link>http://dev01.local/2008/11/handling-empty-google-search-results/</link>
		<pubDate>Tue, 18 Nov 2008 19:21:31 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[The way we've been using Google Search on websites hides a lot of material. One of the problems is that if nothing comes back, Google doesn't say so, and nothing notifies the user that their search completed with nothing found. So here's what we can do about it.
<br /><!--more--><br />

<p>
The GSearchControl object has a "setNoResultsString" function. You would think this would be your friend. For some reason, I couldn't get this to work.
</p>

<p>
What I did was use the "setSearchCompleteCallback" function. Here's my example code. What this does is defines an anonymous function which finds out how many results came back, and if it was zero, tell the user.
</p>

<pre lang="javascript">
      var foo;
      var found = 0;
      searchControl.setSearchCompleteCallback(foo, function() {
	      // determine search results (how many)
			$('.gsc-stats').each(function() {
				var v = $(this).html();
				// v should look something like (#)
				var close = v.indexOf(")");
				found = v.substring(1, close);
				
				// okay, so now we know how many things google found
				// what do i do with that?
				if (found == 0) {
					$('.gsc-resultsRoot').html("No results found.");
				}
	      	});
		}
      );
</pre>

<p>To be a bit more verbose about this... foo doesn't matter. The .gsc-stats container is where Google puts something like (0) or (2), which is the number of results found. As far as I can tell, this is the only place Google says "here's how many I found." So I use jQuery to parse that value. If it's 0, I find this other container .gsc-resultsRoot and replace it's contents with "No results found."
</p>

<p>
Obviously, you could do all kinds of things with this function. "setSearchCompleteCallback" gives you a way to do something when the search is complete, successful or not. From there you can do some crazy stuff.
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date><![CDATA[2008-11-18 14:21:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-11-18 19:21:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[handling-empty-google-search-results]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Decrypt Dreamweaver Passwords</title>
		<link>http://dev01.local/2008/12/decrypt-dreamweaver-passwords/</link>
		<pubDate>Thu, 11 Dec 2008 19:24:41 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<xhtml>
<p><strong>Directions:</strong></p>
<p>Open a Dreamweaver .ste file in a text editor and find where it says pw=(22 character string)<br />
Highlight the characters after pw= and copy them<br />
Follow the link below and paste the copied encrypted password into the form<br />
Click submit or hit enter, and the decrypted password shows up on the screen for your viewing pleasure.<br />
</p>
<p><a href="http://dev01.zone5hosting.com/apps/dwsitepass.php">Dreamweaver Password Decrypter</a></p>
</xhtml><br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date><![CDATA[2008-12-11 14:24:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-12-11 19:24:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[decrypt-dreamweaver-passwords]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="client-access"><![CDATA[Client Access]]></category>
		<category domain="category" nicename="web-applications"><![CDATA[Web Applications]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Handly MySQL Dump Class</title>
		<link>http://dev01.local/2008/11/handly-mysql-dump-class/</link>
		<pubDate>Tue, 11 Nov 2008 23:24:01 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Here's a neat class to do MySQL dumps with PHP. Nice if you don't have access to phpMyAdmin.

Got this from <a href="http://www.coders4fun.com/en/2007/10/19/mysqldump-2-php-backup-mysql-database/">here</a>.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2008/11/lib_dumpphp.txt">lib_dump.php</a>
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2008-11-11 18:24:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-11-11 23:24:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[handly-mysql-dump-class]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Show/Hide CSS For Three Levels Of Menu/Nav</title>
		<link>http://dev01.local/2009/01/showhide-css-for-three-levels-of-menunav/</link>
		<pubDate>Wed, 14 Jan 2009 20:22:09 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>Written with wordpress in mind, but you can adapt as necessary.</p>

<p>
Often you have levels of pages. You'll have top level pages, and some of them have child pages, and some of those child pages have grandchild pages. Usually what you want is for the menu/navigation/sidebar to limit what it's displaying. You don't want to see everything, only what's under where you are now in the hierarchy.
</p>

<pre>
Default case:
ONE
TWO
THREE
</pre>

<pre>
Case 2:
ONE (current page item)
- CHILDA
- CHILDB
- CHILDC
TWO
THREE
</pre>

<pre>
Case 3:
ONE (current page parent, current page ancestor)
- CHILDA (current page item)
- - GRANDCHILD
- CHILDB
- CHILDC
TWO
THREE
</pre>

<pre>
Case 4
ONE (current page ancestor)
- CHILDA (current page parent)
- - GRANDCHILD (current page item)
- CHILDB
- CHILDC
TWO
THREE
</pre>

<p>
Alright, so here's the CSS to make this happen:
</p>
<pre lang="css">
#menu ul li ul {
	display: none;
}
#menu ul li.current_page_ancestor ul {
	display: block;
}
#menu ul li.current_page_ancestor ul li ul {
	display: none;
}
#menu ul li.current_page_ancestor ul li.current_page_parent ul {
	display: block;
}
#menu ul li.current_page_parent ul li.current_page_item ul {
	display: block;
}
#menu ul li.current_page_parent ul li.current_page_item ul li ul {
	display: none;
}
#menu ul li.current_page_item ul {
	display: block;
}
#menu ul li.current_page_item ul li ul {
	display: none;
}
</pre><br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date><![CDATA[2009-01-14 15:22:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-01-14 20:22:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[showhide-css-for-three-levels-of-menunav]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cache Your Geocodes</title>
		<link>http://dev01.local/2009/01/cache-your-geocodes/</link>
		<pubDate>Tue, 27 Jan 2009 20:15:13 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm working on a locator/map project. You put in a zip code, and it searches the database for locations that are close to you. I'm using <a href="/component/content/article/15-php/15-getting-geocodes-with-php">this code</a> to find the geocodes. I'm also caching the geocodes.</p>

<p>What I do is, whenever I need to lookup a geocode for a zip code, first I look in the "cache" table I made. If I find it there, I return those results and I don't have to harass Google. If I don't find it there, I fetch it from Google and store the results in the table, so that I don't have to look them up again.</p>

<p>The table has the zip code, the latitude, and the longitude.</p>

<p>In general it's a good idea to store your geocodes in a table, whether they're for zip codes only or for entire addresses. That information isn't going to change, and it's faster to pull from your own table than to fetch it from Google.</p><br /><!--more--><br />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date><![CDATA[2009-01-27 15:15:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-01-27 20:15:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cache-your-geocodes]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>An Array of States</title>
		<link>http://dev01.local/2009/01/an-array-of-states/</link>
		<pubDate>Fri, 30 Jan 2009 20:46:45 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Modify as needed:
<pre lang="php">function return_states() {

	$state_list = array('AL'=>"Alabama",
                'AK'=>"Alaska",
                'AZ'=>"Arizona",
                'AR'=>"Arkansas",
                'CA'=>"California",
                'CO'=>"Colorado",
                'CT'=>"Connecticut",
                'DE'=>"Delaware",
                'DC'=>"District Of Columbia",
                'FL'=>"Florida",
                'GA'=>"Georgia",
                'HI'=>"Hawaii",
                'ID'=>"Idaho",
                'IL'=>"Illinois",
                'IN'=>"Indiana",
                'IA'=>"Iowa",
                'KS'=>"Kansas",
                'KY'=>"Kentucky",
                'LA'=>"Louisiana",
                'ME'=>"Maine",
                'MD'=>"Maryland",
                'MA'=>"Massachusetts",
                'MI'=>"Michigan",
                'MN'=>"Minnesota",
                'MS'=>"Mississippi",
                'MO'=>"Missouri",
                'MT'=>"Montana",
                'NE'=>"Nebraska",
                'NV'=>"Nevada",
                'NH'=>"New Hampshire",
                'NJ'=>"New Jersey",
                'NM'=>"New Mexico",
                'NY'=>"New York",
                'NC'=>"North Carolina",
                'ND'=>"North Dakota",
                'OH'=>"Ohio",
                'OK'=>"Oklahoma",
                'OR'=>"Oregon",
                'PA'=>"Pennsylvania",
                'RI'=>"Rhode Island",
                'SC'=>"South Carolina",
                'SD'=>"South Dakota",
                'TN'=>"Tennessee",
                'TX'=>"Texas",
                'UT'=>"Utah",
                'VT'=>"Vermont",
                'VA'=>"Virginia",
                'WA'=>"Washington",
                'WV'=>"West Virginia",
                'WI'=>"Wisconsin",
                'WY'=>"Wyoming");
	return $state_list;
}

function return_territories() {
	$usterritory_list = array("American Samoa",
						"Guam",
						"Marianas Islands",
						"Puerto Rico",
						"US Virgin Islands");
	return $usterritory_list;
}

function return_provinces() {
	$CA_provinces = array("Alberta",
					"British Columbia",
					"Manitoba",
					"Montreal",
					"New Brunswick",
					"Newfoundland",
					"Northwest Territories",
					"Nova Scotia",
					"Ontario",
					"Quebec",
					"Saskatchewan",
					"Yukon");
	return $CA_provinces;
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date><![CDATA[2009-01-30 15:46:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-01-30 20:46:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[an-array-of-states]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Is This A Valid Zip Code?</title>
		<link>http://dev01.local/2009/01/is-this-a-valid-zip-code/</link>
		<pubDate>Fri, 30 Jan 2009 21:00:10 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[Handy.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2009/01/valid_zipphp.txt">valid_zip.php</a>
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date><![CDATA[2009-01-30 16:00:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-01-30 21:00:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[is-this-a-valid-zip-code]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prep DB Dump Before Going Live</title>
		<link>http://dev01.local/2009/02/prep-db-dump-before-going-live/</link>
		<pubDate>Mon, 09 Feb 2009 21:52:17 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[I wrote this code for Wordpress, but I suppose it's applicable to any CMS.

You develop on a dev server, it's possible your CMS will have the dev server's domain name in the db a couple of times. It can be tricky to go through the db and change every occurrence of http://dev03.zone5dev.net to something else. Especially if you have posts with dozens of links to uploaded content...

So here's a script to do it for you. This assumes that during the process of making a site live, you do a full db dump (export from phpMyAdmin) and you have that file.
<pre>php clean_wp.php your_db_dump.sql http://devxx.zone5dev.com http://www.livesite.com</pre>
This is going to replace all of the dev sites with the live sites. It's also going to parse the devxx part out of the dev site and look for /home/zone5dev/public_html/devxx and completely remove those.

It produces a copy of your sql file, which you should be able to import with phpMyAdmin on the live site.

Adapt as necessary.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2009/02/clean_wpphp.txt">clean_wp.php</a>

<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date><![CDATA[2009-02-09 16:52:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-09 21:52:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[prep-db-dump-before-going-live]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nuke Those Pesky LCK Files</title>
		<link>http://dev01.local/2009/02/nuke-those-pesky-lck-files/</link>
		<pubDate>Thu, 05 Feb 2009 21:10:59 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[This script will blitz any Dreamweaver LCK files.

<a href="http://dev01.zone5hosting.com/wp/wp-content/uploads/2009/02/nuke_dw_lock_filesphp.txt">nuke_dw_lock_files.php</a>
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date><![CDATA[2009-02-05 16:10:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-05 21:10:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nuke-those-pesky-lck-files]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Disable That Form Submit Button</title>
		<link>http://dev01.local/2009/02/disable-that-form-submit-button/</link>
		<pubDate>Fri, 13 Feb 2009 20:23:32 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false"></guid>
		<description></description>
		<content:encoded><![CDATA[I have a form for importing records from a CSV file into the database. Obviously, given enough rows, this could take a couple of seconds to run. When a user clicks "Import" you don't really want them looking at an "Import" button that they can keep clicking, wondering what's going on. So, disable it. Here's how.
<pre lang="javascript">function doImport() {
	var button = document.getElementById("import-button");
	button.disabled = true;
	button.value = "Importing...";
	return true;
}</pre>
<pre lang="html">input type="submit" value="Import" id="import-button" onclick="doImport()" /</pre>
<!--more-->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date><![CDATA[2009-02-13 15:23:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-13 20:23:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[disable-that-form-submit-button]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fix a Broken Drupal Block</title>
		<link>http://dev01.local/2009/02/fix-a-broken-drupal-block/</link>
		<pubDate>Mon, 23 Feb 2009 16:22:18 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=104</guid>
		<description></description>
		<content:encoded><![CDATA[I just did something stupid and called fb() from a block. When when I went to edit it through the admin, it through a fatal error because it doesn't know what the fb function is. End result, I've now broken the block and cannot edit it to fix it.

Go to cPanel, fire up phpMyAdmin. Go to the "boxes" table and find your block. "bid" is block id. Edit the content there, save.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>104</wp:post_id>
		<wp:post_date><![CDATA[2009-02-23 11:22:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-23 16:22:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fix-a-broken-drupal-block]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trimming Empty Paragraph Tags</title>
		<link>http://dev01.local/2009/02/trimming-empty-paragraph-tags/</link>
		<pubDate>Tue, 24 Feb 2009 19:57:26 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[Was working with content put into Drupal which, for some reason, had empty paragraphs. Thought I'd write a function to just get rid of those for me. What you'd want to do is something like:

<pre lang="php">
$regex = '<p>[[:space:]]*</p>';
return ereg_replace($regex, '', $str);
</pre>

This says, a p tag, followed by zero or more spaces, followed by a /p tag, it going to get replaced with an empty string. Gone.

Okay, that's all well and good, but it's not working, dude. <strong>I have found that sometimes what looks like a space is not actually a space. It may be the malicious combination of two characters, with the ascii codes of 194 and 160.</strong> They pretend to be a space. I think this is something MS Word does. Don't ask me why. If this is the case, try this:

<pre lang="php">
$regex = '<p>' . chr(194).chr(160) . '</p>';
return ereg_replace($regex, '', $str);
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2009-02-24 14:57:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-24 19:57:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[trimming-empty-paragraph-tags]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="html"><![CDATA[HTML]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[Dennis]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dennis.hudson@zone5.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.0.138.18]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2009-02-26 14:05:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2009-02-26 19:05:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the new wordpress theme]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Find Path To Attached Files</title>
		<link>http://dev01.local/2009/03/find-path-to-attached-files/</link>
		<pubDate>Tue, 03 Mar 2009 18:16:02 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=110</guid>
		<description></description>
		<content:encoded><![CDATA[Here's a function that returns an array of filepaths for all files attached to a node.

<pre lang="php">
function lookupFileAttachments($nid) {
	$fileattachments = array();
	
	$sql  = 'SELECT u.description, f.filename, f.filepath ';
	$sql .= 'FROM upload u, files f ';
	$sql .= 'WHERE u.fid = f.fid ';
	$sql .= 'AND u.nid = ' . $nid . ' ';
	
	$res = db_query($sql);
	while ($row = db_fetch_array($res)) {
		$fileattachments[$row['filename']] = $row;
	}
	
	return $fileattachments;
} // end lookupFileAttachments
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>110</wp:post_id>
		<wp:post_date><![CDATA[2009-03-03 13:16:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-03-03 18:16:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[find-path-to-attached-files]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Error Reporting With FirePHP</title>
		<link>http://dev01.local/2009/03/error-reporting-with-firephp/</link>
		<pubDate>Tue, 03 Mar 2009 21:12:09 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Assuming you have FireBug installed, and FirePHP set up, you can use FirePHP to handle your errors. This is pretty sweet, because you can actually see your error messages without barfing them out to the screen. Which is all kinds of bad.</p>
<!--more-->

Put this somewhere in your code so that it gets executed early.

<pre lang="php">
// this is going to take any errors and write them to FirePHP instead
function myErrorHandler($errno, $errstr, $errfile, $errline) {

	$errmsg = $errstr . ' in ' . $errfile . ' line #' . $errline;

	switch ($errno) {
    	case E_USER_ERROR:
		fb('FATAL ERROR: ' . $errmsg, FirePHP::ERROR);
    		exit(1);
	        break;

	    case E_USER_WARNING:
		fb('WARNING: ' . $errmsg, FirePHP::WARN);
	        break;
	
	    case E_USER_NOTICE:
		fb('Notice: ' . $errmsg, FirePHP::INFO);
	        break;
	
	    default:
#	    	fb($errmsg);
	        break;
    }

    /* Don't execute PHP internal error handler */
    return true;	

}
error_reporting(E_ALL);
set_error_handler('myErrorHandler');
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date><![CDATA[2009-03-03 16:12:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-03-03 21:12:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[error-reporting-with-firephp]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Force https via .htaccess</title>
		<link>http://dev01.local/2009/03/force-https-via-htaccess/</link>
		<pubDate>Wed, 04 Mar 2009 15:45:13 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[If you want to make sure that a site or a particular part of a site is accessed only through https, you can force it by adding the following to the  .htaccess file
<pre>RewriteEngine On
RewriteCond %{SERVER_PORT} ^80$
RewriteRule .* https://%{SERVER_NAME}%{REQUEST_URI} [R,L]</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date><![CDATA[2009-03-04 10:45:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-03-04 15:45:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[force-https-via-htaccess]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wordpress Permalinks, .htaccess, and IIS</title>
		<link>http://dev01.local/2009/03/wordpress-permalinks-htaccess-and-iis/</link>
		<pubDate>Fri, 06 Mar 2009 14:08:08 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev19.zone5dev.com/wp/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[Wordpress uses the .htaccess file to handle redirects, allowing nice permalinks and urls. IIS doesn't allow this sort of thing, so you have to come up with something else. What it boils down to is that you make a custom 404 handler page. Call it /wp-404-handler.php and put this code in it:
<pre lang="php">
$qs = $_SERVER['QUERY_STRING'];
$_SERVER['REQUEST_URI'] = substr($qs, strpos($qs, ‘:80′)+3);
$_SERVER['PATH_INFO'] = $_SERVER['REQUEST_URI'];
include(’index.php’);
</pre>
Via <a href="http://www.keyboardface.com/archives/2007/09/07/update-for-wordpress-permalinks-on-iis/">Keyboard Face</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date><![CDATA[2009-03-06 09:08:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-03-06 14:08:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wordpress-permalinks-htaccess-and-iis]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SSL Certificates cause endless loops on WordPress sites</title>
		<link>http://dev01.local/2010/09/ssl-certificates-cause-endless-loops-on-wordpress-sites/</link>
		<pubDate>Mon, 20 Sep 2010 21:12:31 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[On occasion, adding an SSL to a WordPress site on the (gs)  Grid-Service will cause the site to do an endless redirect to a  different site.  This might look like the <a title="WordPress Redirect Exploit" href="http://wiki.mediatemple.net/w/WordPress_Redirect_Exploit">WordPress Redirect Exploit</a>, but it is not.  The usual symptom of this is when you go the https: portion of the site and it redirects you somewhere else.

In a case like this, this article from Techhow (<a class="external autonumber" title="http://www.techhow.net/?p=25" rel="nofollow" href="http://www.techhow.net/?p=25">[1]</a>) shows how you can get the redirect to stop by following these steps.  The domain, <em><span><span class="terminologydef" style="cursor: help;">example.com</span></span></em><span>, should be substituted for your domain name and the <span class="terminologydef" style="cursor: help;">access domain</span> part, </span><em><span><span class="terminologydef" style="cursor: help;">s00000.gridserver.com</span></span></em><span>, can be found in the AccountCenter, under the <span class="terminologydef" style="cursor: help;">Server Guide</span>: </span>

1) Bring up your Terminal (Mac) or PuTTy (Windows) program.
<span> 2) Login to ssh, using this command:  ssh <span class="terminologydef" style="cursor: help;">example.com</span><span>@<span class="terminologydef" style="cursor: help;">s00000.gridserver.com</span></span></span>
3) If you see "Are you sure you want to continue connecting (yes/no)?", then type in "yes" (without the quotes).
4) You'll be prompted for your password, type in your SSH/FTP password.
<span> 5) At the prompt, type in:  find /home/<span class="terminologydef" style="cursor: help;">00000</span>/domains/domain_name/html/ -type f -exec sed -i 's/HTTP_HOST/SERVER_NAME/g' {} \;</span>
6) Once this has executed and the prompt re-appears, type:  exit

This should take care of the issue.  While there are other solutions  that can address this, such as a plugin that disables canonical URL's, <a class="external free" title="http://txfx.net/files/wordpress/disable-canonical-redirects.phps" rel="nofollow" href="http://txfx.net/files/wordpress/disable-canonical-redirects.phps">http://txfx.net/files/wordpress/disable-canonical-redirects.phps</a>,  it was noted that it disabled WordPress' ability to redirect from  things like www. and trailing slashes (not to mention a whole host of  other useful things, <a class="external free" title="http://markjaquith.wordpress.com/2007/09/25/wordpress-23-canonical-urls/" rel="nofollow" href="http://markjaquith.wordpress.com/2007/09/25/wordpress-23-canonical-urls/">http://markjaquith.wordpress.com/2007/09/25/wordpress-23-canonical-urls/</a>).

So, a big thank you to our valued (mt) Media Temple customer, Aaron Holbrook, for providing this information.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date><![CDATA[2010-09-20 16:12:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-20 21:12:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ssl-certificates-cause-endless-loops-on-wordpress-sites]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL Replace Syntax</title>
		<link>http://dev01.local/2010/09/mysql-replace-syntax/</link>
		<pubDate>Tue, 21 Sep 2010 13:35:09 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Very useful for find and replace in phpMyAdmin:
<pre lang="html">update TABLE_NAME set FIELD_NAME = replace(FIELD_NAME, 'find this string', 'replace found string with this string');</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date><![CDATA[2010-09-21 08:35:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-21 13:35:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql-replace-syntax]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="database"><![CDATA[Database]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Redirect (rewrite) via query string</title>
		<link>http://dev01.local/2010/09/redirect-rewrite-via-query-string/</link>
		<pubDate>Fri, 24 Sep 2010 21:37:57 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[Redirect syntax:
<pre lang="html">RedirectMatch /^index.php?id=10 http://domain.com/page/</pre>
will simply ignore query strings. This means we will need to craft a Rewrite Rule in order to handle this:
<pre lang="html">RewriteCond %{QUERY_STRING} ^id=([0-9]*)$
RewriteRule ^index\.php$ http://domain.com/page/? [R=302,L]</pre>
The above RewriteCond looks at the query string, and matches the id to a regular expression that looks for any number of any length. Then we write the RewriteRule, which looks for the URL preceeding the query string. In this case it is index.php. It then redirects the user to a new page.

If I wanted to match a particular value in the query string, I would do this instead of using the regular expression:
<pre lang="html">RewriteCond %{QUERY_STRING} ^id=10$
RewriteRule ^index\.php$ http://domain.com/page/? [R=302,L]</pre>
<strong>NOTE: </strong>The ? in the RewriteRule tells the server to discard the current query string. Otherwise, you would end up redirecting the user to http://domain.com/page/?id=10.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date><![CDATA[2010-09-24 16:37:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-24 21:37:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[redirect-rewrite-via-query-string]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Media Temple Wordpress Errors</title>
		<link>http://dev01.local/2010/09/media-temple-wordpress-errors/</link>
		<pubDate>Tue, 28 Sep 2010 15:40:38 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=126</guid>
		<description></description>
		<content:encoded><![CDATA[If anyone notices intermittent problems on any of their sites on MT where pages seem to disappear or produce error messages such as:
<pre lang="php">Fatal error: Cannot use object of type WP_Object_Cache as array in /nfs/c06/h04/mnt/91421/domains/irecusa.org/html/wp-includes/cache.php on line 352</pre>
The problem seems to lie with the version of PHP  + the Wordpress 3.0.1 codebase.  You can choose which PHP version to use by adding a line to your .htaccess file such as:
<pre lang="html">Action php5-script /gs-bin/php5-latest</pre>
This will update PHP to the very latest - 5.3.2

More about this here: http://wiki.mediatemple.net/w/Choosing_your_PHP_version_on_the_Grid

Along with this, you may get a PHP E_WARNING message when using the date() function about the timezone not being set. This can be fixed by setting the timezone environment variable:
<pre lang="php">date_default_timezone_set('America/New_York');</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>126</wp:post_id>
		<wp:post_date><![CDATA[2010-09-28 10:40:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-28 15:40:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[media-temple-wordpress-errors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Set PHP Timezone</title>
		<link>http://dev01.local/2010/09/set-php-timezone/</link>
		<pubDate>Tue, 28 Sep 2010 21:33:12 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[The latest releases (5.3.x) of PHP require you to set the timezone and will otherwise throw an error if not set. This can be done one of two ways:

Via php.ini file (takes care of entire site)
<pre lang="html">date.timezone = "America/New_York"</pre>
<strong>NOTE</strong>: For sites on media temple, create a new php.ini file in /home/xxxxx/etc/ and enter the above.

The second way is via the .htaccess file on a directory-by-directory basis:
<pre lang="html">php_value date.timezone "America/New_York"</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date><![CDATA[2010-09-28 16:33:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-09-28 21:33:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[set-php-timezone]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Facebook Developer Tools</title>
		<link>http://dev01.local/2010/10/facebook-developer-tools/</link>
		<pubDate>Tue, 19 Oct 2010 13:20:24 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/wp/?p=134</guid>
		<description></description>
		<content:encoded><![CDATA[Linter: http://developers.facebook.com/tools/lint/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date><![CDATA[2010-10-19 08:20:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2010-10-19 13:20:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[facebook-developer-tools]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-applications"><![CDATA[Web Applications]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prototypes, style guides, web design</title>
		<link>http://dev01.local/2013/10/prototypes-style-guides-web-design/</link>
		<pubDate>Wed, 09 Oct 2013 20:40:56 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=139</guid>
		<description></description>
		<content:encoded><![CDATA[Some interesting new tools to check out:

Interactive prototypes: <a href="http://standin.io/">http://standin.io/</a>

(you probably didn't know the moons of Jupiter had their own TLDs...)

Style guide generator: <a href="http://frontify.com/">http://frontify.com/</a>

Designing in the browser: <a href="http://www.google.com/webdesigner/">http://www.google.com/webdesigner/</a>

Spencer]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>139</wp:post_id>
		<wp:post_date><![CDATA[2013-10-09 15:40:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-09 20:40:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[prototypes-style-guides-web-design]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="prototypes"><![CDATA[prototypes]]></category>
		<category domain="category" nicename="reference-materials"><![CDATA[Reference Materials]]></category>
		<category domain="post_tag" nicename="style-guide"><![CDATA[style guide]]></category>
		<category domain="category" nicename="web-design"><![CDATA[Web Design]]></category>
		<category domain="post_tag" nicename="web-design-2"><![CDATA[web design]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Good reading list on RWD</title>
		<link>http://dev01.local/2013/10/good-reading-list-on-rwd/</link>
		<pubDate>Wed, 09 Oct 2013 20:44:20 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.mobify.com/blog/rwd-links-september-2013/">http://www.mobify.com/blog/rwd-links-september-2013/</a>

especially this one, with Seneca College case study:

<a href="http://mobile.smashingmagazine.com/2013/09/11/responsive-navigation-on-complex-websites/">http://mobile.smashingmagazine.com/2013/09/11/responsive-navigation-on-complex-websites/</a>

Spencer]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date><![CDATA[2013-10-09 15:44:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-09 20:44:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[good-reading-list-on-rwd]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<category domain="post_tag" nicename="reponsive"><![CDATA[reponsive]]></category>
		<category domain="category" nicename="responsive-design"><![CDATA[Responsive Design]]></category>
		<category domain="category" nicename="web-design"><![CDATA[Web Design]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery foreach</title>
		<link>http://dev01.local/2013/10/jquery-foreach/</link>
		<pubDate>Tue, 15 Oct 2013 21:47:52 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[There is technically no cross-browser compliant Javascript function for PHP's foreach(), so we use jQuery.

If we have an array and need both the index (key) and value for each:
<pre>var arr = [];
arr[0] = 'First Value';
arr[1] = 'Second Value';

jQuery.each(arr, function(key, val) {
     console.log(arr[key]);
});

Returns:
First Value
Second Value</pre>
If we have an object:
<pre>var object = {
   'key': 'value',
   'key2': 'value2'
};

jQuery.each(object, function(key, val) {
     console.log(object[key]);
});</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date><![CDATA[2013-10-15 16:47:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-15 21:47:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery-foreach]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery &amp; push()</title>
		<link>http://dev01.local/2013/10/jquery-push/</link>
		<pubDate>Tue, 15 Oct 2013 21:52:42 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[Loop and "push" each variable into another array or object:
<pre>var arr = [];
arr[0] = 'First Value';
arr[1] = 'Second Value';

var arr2 = [];
arr2[0] = 'First';
jQuery.each(arr, function(key, val) {
     arr2.push(val);
});

arr2 is now:
First
First Value
Second Value</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date><![CDATA[2013-10-15 16:52:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-15 21:52:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery-push]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery side-popout</title>
		<link>http://dev01.local/2013/10/jquery-side-popout/</link>
		<pubDate>Wed, 16 Oct 2013 15:18:02 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.berriart.com/sidr/#usage" target="_blank">http://www.berriart.com/sidr/#usage</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date><![CDATA[2013-10-16 10:18:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-10-16 15:18:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[jquery-side-popout]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="category" nicename="reference-materials"><![CDATA[Reference Materials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drupal modules and cron</title>
		<link>http://dev01.local/2015/03/drupal-modules-and-cron/</link>
		<pubDate>Fri, 27 Mar 2015 21:11:25 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[Is your cron failing you? Find out what modules hook into cron for easier troubleshooting:
<pre>/***
 * mymodule.module
***/

function mymodule_cron() {
     // Do stuff here
}</pre>
If you didn't know about this module, use the module_implements() function:
<pre>$module_list = module_implements('cron');
print theme_list($module_list);</pre>
<ul>
	<li>mymodule</li>
	<li>another module</li>
	<li>yet another module</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date><![CDATA[2015-03-27 16:11:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-03-27 21:11:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[drupal-modules-and-cron]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Range for Javascript</title>
		<link>http://dev01.local/2015/06/range-for-javascript/</link>
		<pubDate>Fri, 05 Jun 2015 17:29:54 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[PHP's range() functionality with a javascript function:

&nbsp;
<pre>var makeRange = function( bMin, bMax ) {
  return bMin &gt; bMax ? [] : [bMin].concat( makeRange( ++bMin, bMax ) );
};
</pre>
&nbsp;
<pre>makeRange(1, 5);
... [1, 2, 3, 4, 5]
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date><![CDATA[2015-06-05 12:29:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-05 17:29:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[range-for-javascript]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="programming-languages"><![CDATA[Programming Languages]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Linux Flavor</title>
		<link>http://dev01.local/2015/06/linux-flavor/</link>
		<pubDate>Tue, 16 Jun 2015 20:56:16 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[Find out what you're running on:

&nbsp;
<pre>uname -a
lsb_release -a
cat /etc/*release
cat /etc/issue*
cat /proc/version
</pre>
Media Temple's DVs should output something like this for the OS:
<pre>cat /etc/issue*
CentOS release 6.5 (Final)
Kernel \r on an \m
</pre>
.. and for the kernel:
<pre>cat /proc/version
Linux version 2.6.32-042stab094.8 (root@kbuild-rh6-x64) (gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ) #1 SMP Tue Dec 16 20:36:56 MSK 2014
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date><![CDATA[2015-06-16 15:56:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-16 20:56:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[linux-flavor]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PEAR / Drush</title>
		<link>http://dev01.local/2015/06/pear-drush/</link>
		<pubDate>Tue, 16 Jun 2015 21:15:45 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=178</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>
pear channel-discover pear.drush.org
Adding Channel "pear.drush.org" succeeded
Discovery of channel "pear.drush.org" succeeded
</pre>

&nbsp;
and install:
<pre>
pear install drush/drush
downloading drush-6.2.0.0.tgz ...
Starting to download drush-6.2.0.0.tgz (505,989 bytes)
.....................................................................................................done: 505,989 bytes
install ok: channel://pear.drush.org/drush-6.2.0.0
</pre>

Docs:
<pre>
http://docs.drush.org/en/master/usage/
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>178</wp:post_id>
		<wp:post_date><![CDATA[2015-06-16 16:15:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-16 21:15:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pear-drush]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="web-servers"><![CDATA[Web Servers]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_87b7cd2302b376d863ccfb4d8c6a07b3]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_02e9216e83473104ce09aac6b096b02b]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drush Docs</title>
		<link>http://dev01.local/2015/06/drush-docs/</link>
		<pubDate>Tue, 16 Jun 2015 21:29:28 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[Main drush docs are at <a href="http://docs.drush.org/" target="_blank">http://docs.drush.org/</a>

or.. http://drushcommands.com/drush-6x/archive/archive-dump
A helpful user guide: <a href="https://www.drupal.org/node/2132447" target="_blank">https://www.drupal.org/node/2132447</a>

Site archive function (<a href="http://drushcommands.com/drush-6x/archive/archive-dump" target="_blank">http://drushcommands.com/drush-6x/archive/archive-dump</a>):

&nbsp;
<pre>drush archive-dump --tar-options="--exclude=.git --exclude=sites/default/files"
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date><![CDATA[2015-06-16 16:29:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-16 21:29:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[drush-docs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drupal Example Modules</title>
		<link>http://dev01.local/2015/06/drupal-example-modules/</link>
		<pubDate>Tue, 16 Jun 2015 23:10:32 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[Drupal core examples project (<a href="https://drupal.org/project/examples" target="_blank">https://drupal.org/project/examples</a>)

.. and a searchable and filterable list of contributed modules. What's neat about this? You can filter by "example" modules for implementations outside of core: <a href="https://www.drupal.org/project/project_module?f%5B0%5D=&amp;f%5B1%5D=&amp;f%5B2%5D=im_vid_3%3A19440&amp;f%5B3%5D=&amp;f%5B4%5D=sm_field_project_type%3A%5B*+TO+*%5D&amp;text=&amp;solrsort=iss_project_release_usage+desc&amp;op=Search" target="_blank">https://www.drupal.org/project/project_module?f%5B0%5D=&amp;f%5B1%5D=&amp;f%5B2%5D=im_vid_3%3A19440&amp;f%5B3%5D=&amp;f%5B4%5D=sm_field_project_type%3A%5B*+TO+*%5D&amp;text=&amp;solrsort=iss_project_release_usage+desc&amp;op=Search</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2015-06-16 18:10:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-16 23:10:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[drupal-example-modules]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<category domain="category" nicename="html"><![CDATA[HTML]]></category>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="programming-languages"><![CDATA[Programming Languages]]></category>
		<category domain="category" nicename="reference-materials"><![CDATA[Reference Materials]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wordpress Appearance Access for Editors</title>
		<link>http://dev01.local/2015/06/wordpress-appearance-access-for-editors/</link>
		<pubDate>Mon, 22 Jun 2015 14:06:07 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=184</guid>
		<description></description>
		<content:encoded><![CDATA[We often use the "Editor" role for clients so they don't have access to the full array of options in the left sidebar including plugins. Here's a way to modify a user role's capabilities to access the Appearance section without having to add a plugin.

In functions.php (or plugin - make sure the action is after_setup_theme):

&nbsp;
<pre>function the_function_name() {
  // get the the role object
  $role_object = get_role( 'editor' );

  // add $cap capability to this role object
  $role_object-&gt;add_cap( 'edit_theme_options' );
}
add_action( 'after_setup_theme', 'the_function_name' );
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>184</wp:post_id>
		<wp:post_date><![CDATA[2015-06-22 09:06:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-22 14:06:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wordpress-appearance-access-for-editors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mutation Observer</title>
		<link>http://dev01.local/2015/06/mutation-observer/</link>
		<pubDate>Tue, 23 Jun 2015 20:51:30 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[JS prototype for observing DOM changes:

&nbsp;
<pre>(function( $ ) {
            var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;

            function isDOMAttrModifiedSupported() {
                var p = document.createElement('p');
                var flag = false;
    
                if (p.addEventListener) p.addEventListener('DOMAttrModified', function() {
                    flag = true
                }, false);
                else if (p.attachEvent) p.attachEvent('onDOMAttrModified', function() {
                    flag = true
                });
                else return false;
    
                p.setAttribute('id', 'target');
    
                return flag;
            }

            $.fn.attrchange = function(callback) {
                if (MutationObserver) {
                    var options = {
                        subtree: false,
                        attributes: true
                    };
    
                    var observer = new MutationObserver(function(mutations) {
                        
                        mutations.forEach(function(e) {
                            callback.call(e.target, e.attributeName);
                        });
                    });
                    // loop through each observed
                    return this.each(function() {
                        
                        observer.observe(this, options);
                    });
    
                } else if (isDOMAttrModifiedSupported()) {
                    
                    return this.on('DOMAttrModified', function(e) {
                        callback.call(this, e.attrName);
                    });
                } else if ('onpropertychange' in document.body) {
                    return this.on('propertychange', function(e) {
                        callback.call(this, window.event.propertyName);
                    });
                }
            }
          

            $('#menu-small-right').attrchange(function(attrName) {
              console.log('Attribute: ' + attrName + ' modified ');
              }).css('height', 100);
          })( jQuery );
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date><![CDATA[2015-06-23 15:51:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-23 20:51:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mutation-observer]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wordpress Analytics Action</title>
		<link>http://dev01.local/2015/06/wordpress-analytics-action/</link>
		<pubDate>Thu, 25 Jun 2015 14:42:52 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[Add GA tracking to a Wordpress site without having to install a heavy-duty plugin.

In functions.php (or plugin): (text mode to see JS code)

&nbsp;
<pre>add_action( '__theme_analytics', 'theme_analytics_code', 10 );
function theme_analytics_code() {
  ?&gt;<script>// <![CDATA[
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');   ga('create', 'UA-XXXXXXX-XXX', 'auto');   ga('send', 'pageview');
// ]]]]><![CDATA[></script><!--?php  } &lt;/pre&gt; &lt;p&gt;&lt;br ?--></pre>
&nbsp;

In header.php right after the body tag:
<pre>do_action( '__theme_analytics' );
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date><![CDATA[2015-06-25 09:42:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-25 14:42:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wordpress-analytics-action]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[JavaScript]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL update / replace</title>
		<link>http://dev01.local/2015/06/mysql-update-replace/</link>
		<pubDate>Thu, 25 Jun 2015 21:47:15 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=191</guid>
		<description></description>
		<content:encoded><![CDATA[Here's some SQL that's great for "mass" replacing of URLs in a database:

&nbsp;
<pre>update [table_name] set [field_name] = replace([field_name],'[string_to_find]','[string_to_replace]');
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>191</wp:post_id>
		<wp:post_date><![CDATA[2015-06-25 16:47:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-25 21:47:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mysql-update-replace]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[MySQL]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nifty image filters</title>
		<link>http://dev01.local/2015/08/nifty-image-filters/</link>
		<pubDate>Thu, 06 Aug 2015 20:35:15 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[Most modern browsers support these filters (not IE 9 &amp; below)

<a href="https://css-tricks.com/almanac/properties/f/filter/" target="_blank">https://css-tricks.com/almanac/properties/f/filter/</a>

Grayscale grayscale( [ | ] )

&nbsp;
<pre class="css">img {
  -webkit-filter: grayscale(1);
  filter: grayscale(1);
}
</pre>
Sepia ( [ | ] )
<pre class="css">img {
  -webkit-filter: sepia(1);
  filter: sepia(1);
}
</pre>
Opacity ( [ | ] )
<pre class="css">img {
  -webkit-filter: opacity(.5);
  filter: opacity(.5);
  /* IE 6/7/8 */
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date><![CDATA[2015-08-06 15:35:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-08-06 20:35:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[nifty-image-filters]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="web-design"><![CDATA[Web Design]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_5a89f00b39050ca318b035c1903801e7]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Drupal - unexpected error</title>
		<link>http://dev01.local/2015/10/drupal-unexpected-error/</link>
		<pubDate>Mon, 05 Oct 2015 18:04:09 +0000</pubDate>
		<dc:creator><![CDATA[jeff]]></dc:creator>
		<guid isPermaLink="false">http://dev01.zone5hosting.com/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[A uniquely entertaining message to get when spinning up a Drupal site is simply "The website has encountered an error". No details. The PHP exception was caught, but we need to know what it is.

Change the $conf setting in settings.php as so:

&nbsp;
<pre>$conf['error_level'] = 1;
</pre>
Then we can start seeing the actual exceptions. Nifty.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date><![CDATA[2015-10-05 13:04:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-10-05 18:04:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[drupal-unexpected-error]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="drupal"><![CDATA[Drupal]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
